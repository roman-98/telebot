name: TELEBOT-CICD

on: push

env:
  TARGETARCH: amd64
  
jobs:
  ci:
    name: CI
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GHCR_TOKEN }}

    - name: Extract Helm Tag
      id: extract-tag
      run: |
        TAG=$(grep 'tag:' helm/values.yaml | sed 's/^.*tag: "\(.*\)"$/\1/')
        echo "TAG=$TAG" >> $GITHUB_ENV

    - name: Build and push Docker image
      run: |
        IMAGE_NAME=ghcr.io/${{ github.repository }}:${{ env.TAG }}-linux-amd64
        docker build -t $IMAGE_NAME .
        docker push $IMAGE_NAME

  deploy:
    name: Deploy Secrets to Kubernetes
    runs-on: ubuntu-latest

    steps:
    - name: Checkout the code
      uses: actions/checkout@v3

    - name: Set up Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v1
      with:
        service_account_key: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}
        project_id: ${{ secrets.GCP_PROJECT_ID }}
        export_default_credentials: true

    - name: Retrieve TELE_TOKEN from GCP Secret Manager
      run: |
        TELE_TOKEN=$(gcloud secrets versions access latest --secret=TELE_TOKEN)
        echo "TELE_TOKEN=$TELE_TOKEN" >> $GITHUB_ENV

    - name: Create Kubernetes Secret manifest
      run: |
        kubectl create secret generic telegram-bot-secret \
          --from-literal=TELE_TOKEN=$TELE_TOKEN \
          --dry-run=client -o yaml > ./k8s-secret.yaml

    - name: Encrypt Secret using SOPS and GCP KMS
      run: |
        sops --kms projects/${{ secrets.GCP_PROJECT_ID }}/locations/global/keyRings/YOUR_KEYRING/cryptoKeys/YOUR_KEY \
          --encrypt ./k8s-secret.yaml > ./k8s-secret.enc.yaml

    - name: Commit and push encrypted secret
      run: |
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"
        git add ./k8s-secret.enc.yaml
        git commit -m "Update encrypted Kubernetes secret"
        git push

    - name: Apply changes with Flux
      run: |
        flux reconcile source git flux-system
        flux reconcile kustomization flux-system